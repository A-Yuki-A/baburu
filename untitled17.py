# -*- coding: utf-8 -*-
"""Untitled17.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1MjustTPCCfKo7_7zUkTvqcMwin5g3kJl
"""

import random
import matplotlib.pyplot as plt
from matplotlib.animation import FuncAnimation
from matplotlib.widgets import Button
from mpl_toolkits.mplot3d import Axes3D

# 1から6までのリストをランダムに並べる
numbers = [1, 2, 3, 4, 5, 6]
random.shuffle(numbers)
print("Before sorting:", numbers)

# バブルソートのプロセスを記録するためのリスト
steps = []
actions = []

def bubble_sort(arr):
    n = len(arr)
    for i in range(n):
        for j in range(0, n-i-1):
            actions.append(f"Comparing arr[{j}] and arr[{j+1}]")
            if arr[j] > arr[j+1]:
                actions.append(f"Swapping arr[{j}] and arr[{j+1}]")
                # 要素を交換
                arr[j], arr[j+1] = arr[j+1], arr[j]
                # 各ステップを記録
                steps.append(list(arr))

# リストをバブルソートで整列し、ステップを記録
bubble_sort(numbers)

# アニメーションの設定
fig = plt.figure()
ax = fig.add_subplot(111, projection='3d')

# 軸の設定
ax.set_xlim(0, len(numbers)-1)
ax.set_ylim(0, 6)
ax.set_zlim(0, len(steps))

# 最初のバーグラフを設定
bars = ax.bar(range(len(numbers)), steps[0], zdir='y', width=0.5)

# 操作テキストを追加
action_text = ax.text2D(0.05, 0.95, "", transform=ax.transAxes)

# 現在のステップを追跡する変数
current_step = 0

def update_plot(step):
    for bar, val in zip(bars, steps[step]):
        bar.remove()
    new_bars = ax.bar(range(len(numbers)), steps[step], zdir='y', width=0.5)
    action_text.set_text(actions[step])
    return new_bars

def next_step(event):
    global current_step, bars
    current_step += 1
    if current_step >= len(steps):
        current_step = len(steps) - 1
    bars = update_plot(current_step)
    plt.draw()

# ボタンを追加
ax_next = plt.axes([0.8, 0.05, 0.1, 0.075])
btn_next = Button(ax_next, 'Next')
btn_next.on_clicked(next_step)

# 初期状態を表示
bars = update_plot(current_step)

plt.show()